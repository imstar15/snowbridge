name: parachain

on:
  push:
    paths:
      - 'parachain/**'
      - '!parachain/README.md'
      - '!parachain/LICENSE'
      - '!parachain/docker-compose.yml'
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: sccache
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C debuginfo=1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('parachain/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: actions/cache@v1
        with:
          path: |
            ~/.cache/sccache
          key: ${{ runner.os }}-scacche-check-${{ hashFiles('parachain/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2020-08-10
          target: wasm32-unknown-unknown
      - uses: actions-rs/install@v0.1
        with:
          crate: sccache
          version: latest
          use-tool-cache: true
      - run: sccache -s
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path parachain/Cargo.toml
      - run: sccache -s

  test:
    needs: check
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: sccache
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C debuginfo=1
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/cache@v1
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('parachain/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: actions/cache@v1
        with:
          path: |
            ~/.cache/sccache
          key: ${{ runner.os }}-scacche-test-${{ hashFiles('parachain/Cargo.lock') }}
      - uses: actions-rs/install@v0.1
        with:
          crate: sccache
          version: latest
          use-tool-cache: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest
          use-tool-cache: true
      - run: sccache -s
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: >-
            --manifest-path parachain/Cargo.toml
            --verbose --workspace
            --exclude artemis-node,artemis-runtime
            --exclude-files 'node/src/command.rs,*/mock.rs,*/test.rs'
            --coveralls ${{ secrets.COVERALLS_REPO_TOKEN }}
      - run: sccache -s
